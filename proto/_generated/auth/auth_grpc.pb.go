// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package auth

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AuthServicesClient is the client API for AuthServices service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AuthServicesClient interface {
}

type authServicesClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthServicesClient(cc grpc.ClientConnInterface) AuthServicesClient {
	return &authServicesClient{cc}
}

// AuthServicesServer is the server API for AuthServices service.
// All implementations should embed UnimplementedAuthServicesServer
// for forward compatibility
type AuthServicesServer interface {
}

// UnimplementedAuthServicesServer should be embedded to have forward compatible implementations.
type UnimplementedAuthServicesServer struct {
}

// UnsafeAuthServicesServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AuthServicesServer will
// result in compilation errors.
type UnsafeAuthServicesServer interface {
	mustEmbedUnimplementedAuthServicesServer()
}

func RegisterAuthServicesServer(s grpc.ServiceRegistrar, srv AuthServicesServer) {
	s.RegisterService(&AuthServices_ServiceDesc, srv)
}

// AuthServices_ServiceDesc is the grpc.ServiceDesc for AuthServices service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AuthServices_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "auth.AuthServices",
	HandlerType: (*AuthServicesServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "auth/auth.proto",
}
