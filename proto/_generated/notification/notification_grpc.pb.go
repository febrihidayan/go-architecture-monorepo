// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: notification/notification.proto

package notification

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const ()

// NotificationServicesClient is the client API for NotificationServices service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type NotificationServicesClient interface {
}

type notificationServicesClient struct {
	cc grpc.ClientConnInterface
}

func NewNotificationServicesClient(cc grpc.ClientConnInterface) NotificationServicesClient {
	return &notificationServicesClient{cc}
}

// NotificationServicesServer is the server API for NotificationServices service.
// All implementations should embed UnimplementedNotificationServicesServer
// for forward compatibility
type NotificationServicesServer interface {
}

// UnimplementedNotificationServicesServer should be embedded to have forward compatible implementations.
type UnimplementedNotificationServicesServer struct {
}

// UnsafeNotificationServicesServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to NotificationServicesServer will
// result in compilation errors.
type UnsafeNotificationServicesServer interface {
	mustEmbedUnimplementedNotificationServicesServer()
}

func RegisterNotificationServicesServer(s grpc.ServiceRegistrar, srv NotificationServicesServer) {
	s.RegisterService(&NotificationServices_ServiceDesc, srv)
}

// NotificationServices_ServiceDesc is the grpc.ServiceDesc for NotificationServices service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var NotificationServices_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "notification.NotificationServices",
	HandlerType: (*NotificationServicesServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "notification/notification.proto",
}
